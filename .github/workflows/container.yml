name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: npm install and npm run CI commands
        run: |
            npm i
            npm run test:ci
            npm run build:ci

      # - name: Build and Push Created Docker Image to Docker Repo
      #   uses: mr-smithers-excellent/docker-build-push@v6
      #   with:
      #     image: aliakhavan2018/programery
      #     tags: latest
      #     registry: docker.io
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     dockerfile: Dockerfile

      # - name: SSH into the server and deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     script: |
      #       docker system prune -a
      #       docker volume ls|grep frontend_volume > /dev/null || docker volume create frontend_volume
      #       docker stop programery_pwa
      #       docker rm programery_pwa
      #       docker run --rm -v frontend_volume:/data/ ubuntu /bin/sh -c "rm -rf /data/*"
      #       docker login docker.io -u "${{ secrets.DOCKER_USERNAME }}" --password ${{ secrets.DOCKER_PASSWORD }}
      #       docker pull aliakhavan2018/programery:latest
      #       docker run -p 4200:80 -d --name programery_pwa -v frontend_volume:/usr/share/nginx/html/ aliakhavan2018/programery:latest
      #       docker system prune -af

    # - name: Copy dist to VPS
    #   uses: appleboy/scp-action@v0.1.4
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     source: "dist"
    #     target: "/var/www/html/programery_fe"
